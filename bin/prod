#!/usr/bin/env ruby
# frozen_string_literal: true

#
# USE bin/prod get_db server_user_name database_name

require 'colorize'
require 'yaml'

if ARGV[0] == 'get_db'
  puts 'You should add username on server'.red if ARGV[1].nil?
  restore_to = ARGV[2] || :tramway_pro_development
  at = Time.now.strftime('%Y-%m-%d--%H-%M')
  dump = "tramway_pro--#{at}.dump"
  puts 'Dumping production database'.green
  system "scp #{ARGV[1]}@138.68.76.45:/srv/tramway_pro/shared/config/database.yml ./"
  db_config = YAML.load_file('database.yml')
  db_name = db_config['production']['database']
  system 'rm -rf database.yml'
  system "ssh -t #{ARGV[1]}@138.68.76.45 'pg_dump -Fc --no-acl --no-owner -v #{db_name} > #{dump}'"
  puts 'Downloading...'.green
  system "scp #{ARGV[1]}@138.68.76.45:#{dump} /tmp/"
  puts "Restoring #{restore_to} database".green
  system "ssh -t #{ARGV[1]}@138.68.76.45 'rm -f #{dump}'"
  system "dropdb tramway_pro_development --if-exists && createdb tramway_pro_development && pg_restore -d #{restore_to} /tmp/#{dump}"
  system "dropdb tramway_pro_test --if-exists && createdb tramway_pro_test && pg_restore -d tramway_pro_test /tmp/#{dump}"
  puts 'Copy prod db for tests...'.yellow
  system "cp -rf /tmp/#{dump} tmp/test.dump"
  puts 'Copy prod db to backup folder...'.yellow
  system 'mkdir ~/backup.tramway.dbs'
  system "cp -r /tmp/#{dump} ~/backup.tramway.dbs/#{dump}"
  system 'rails db:migrate'
  system 'rails db:seed'
end

if ARGV[0] == 'get_credentials'
  puts 'You should add username on server'.red if ARGV[1].nil?
  system "scp #{ARGV[1]}@138.68.76.45:/home/tramway/tramway_pro/shared/config/oauth.yml config/oauth.yml"
  puts 'Credentials getting done!'.green
end
