#!/usr/bin/env ruby
# frozen_string_literal: true

#
# USE bin/prod get_db server_user_name database_name

require 'colorize'
require 'yaml'

def remote_run(command)
  system "ssh -t #{ARGV[1]}@tramway.pro '#{command}'"
end

if ARGV[0] == 'get_db'
  puts 'You should add username on server'.red if ARGV[1].nil?
  restore_to = ARGV[2] || :tramway_pro_development
  dump = 'tramway_pro.dump'
  puts 'Dumping production database'.green
  remote_run 'sudo service postgresql start'
  remote_run "touch #{dump}"
  remote_run "pg_dump -Fc --no-acl --no-owner -v tramway_pro_production_kABGW9AjX68wxaI5 > #{dump}"
  remote_run 'sudo service postgresql stop'
  puts 'Downloading...'.green
  dump_path = "/home/tramway/tramway_pro/#{dump}"
  system "scp #{ARGV[1]}@tramway.pro:#{dump_path} dumps/"
  remote_run "rm #{dump_path}"
  puts "Restoring #{restore_to} database".green
  system "docker-compose exec db psql -U postgres -c 'CREATE ROLE tramway with SUPERUSER'";
  system "docker-compose exec db psql -U postgres -c 'DROP DATABASE #{restore_to} WITH (FORCE);'"
  system "docker-compose exec db psql -U postgres -c 'CREATE DATABASE #{restore_to};'"
  system "docker-compose exec db pg_restore -U postgres -d #{restore_to} /dumps/#{dump}"
  puts 'Copy prod db to backup folder...'.yellow
  system 'mkdir ~/backup.tramway.dbs'
  system "cp -r /tmp/#{dump} ~/backup.tramway.dbs/#{dump}"
  system 'docker-compose run app rails db:migrate'
  system 'docker-compose run app rails db:seed'
  # system 'docker-compose run app rails r bin/generate/twitter-previews.rb'
  # system "scp tmp/twitter-preview-person* #{ARGV[1]}@tramway.pro:/srv/tramway_pro/current/tmp/"
  # command = "bash -lic \"bundle exec rails r bin/generate/push-twitter-previews.rb\""
  # system "ssh -t #{ARGV[1]}@tramway.pro 'cd /srv/tramway_pro/current/ && #{command}'"
end

if ARGV[0] == 'get_files'
  puts 'You should add username on server'.red if ARGV[1].nil?
  copy_files_command = "rsync -avh --include='*.png' --include='*/' --exclude='*' #{ARGV[1]}@tramway.pro:/srv/tramway_pro/shared/public/ ./public"
  puts copy_files_command.blue
  system copy_files_command
  copy_files_command = "rsync -avh --include='*.jpg' --include='*/' --exclude='*' #{ARGV[1]}@tramway.pro:/srv/tramway_pro/shared/public/ ./public"
  puts copy_files_command.blue
  system copy_files_command
end
